[{"C:\\Try\\Tell\\tell\\src\\index.js":"1","C:\\Try\\Tell\\tell\\src\\App.js":"2","C:\\Try\\Tell\\tell\\src\\Sidebar.js":"3","C:\\Try\\Tell\\tell\\src\\SidebarChannel.js":"4","C:\\Try\\Tell\\tell\\src\\Chat.js":"5","C:\\Try\\Tell\\tell\\src\\serviceWorker.js":"6","C:\\Try\\Tell\\tell\\src\\ChatHeader.js":"7","C:\\Try\\Tell\\tell\\src\\Message.js":"8","C:\\Try\\Tell\\tell\\src\\features\\userSlice.js":"9","C:\\Try\\Tell\\tell\\src\\features\\appSlice.js":"10","C:\\Try\\Tell\\tell\\src\\Login.js":"11","C:\\Try\\Tell\\tell\\src\\app\\store.js":"12","C:\\Try\\Tell\\tell\\src\\firebase.js":"13"},{"size":644,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1088,"mtime":1607350816292,"results":"16","hashOfConfig":"15"},{"size":2984,"mtime":1607354507943,"results":"17","hashOfConfig":"15"},{"size":635,"mtime":1607354961568,"results":"18","hashOfConfig":"15"},{"size":2783,"mtime":1607362303300,"results":"19","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"15"},{"size":1128,"mtime":1607360702667,"results":"21","hashOfConfig":"15"},{"size":541,"mtime":1607362246987,"results":"22","hashOfConfig":"15"},{"size":743,"mtime":1607351593942,"results":"23","hashOfConfig":"15"},{"size":584,"mtime":1607353420588,"results":"24","hashOfConfig":"15"},{"size":672,"mtime":1607348203700,"results":"25","hashOfConfig":"15"},{"size":254,"mtime":1606724082052,"results":"26","hashOfConfig":"15"},{"size":721,"mtime":1606724083856,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ss6qhj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Try\\Tell\\tell\\src\\index.js",[],["57","58"],"C:\\Try\\Tell\\tell\\src\\App.js",[],"C:\\Try\\Tell\\tell\\src\\Sidebar.js",[],["59","60"],"C:\\Try\\Tell\\tell\\src\\SidebarChannel.js",[],"C:\\Try\\Tell\\tell\\src\\Chat.js",["61"],"import React from \"react\";\r\nimport \"./Chat.css\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CradGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\nimport EmojiEmoticonsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport Message from \"./Message\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      db.collection(\"channels\")\r\n        .doc(channelId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [channelId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n      message: input,\r\n      user: user,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader channelName={channelName} />\r\n\r\n      <div className=\"chat__messages\">\r\n        {messages.map((message) => {\r\n          console.log(message);\r\n        })}\r\n        {messages.map((message) => (\r\n          <Message\r\n            message={message.message}\r\n            timestamp={message.timestamp}\r\n            user={message.user}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat__input\">\r\n        <AddCircleIcon fontSize=\"large\" />\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            disabled={!channelId}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={`Message #${channelName}`}\r\n          />\r\n          <button\r\n            className=\"chat__inputButton\"\r\n            onClick={sendMessage}\r\n            disabled={!channelId}\r\n            type=\"submit\"\r\n          >\r\n            Send Message\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"chat__inputIcon\">\r\n          <CradGiftcardIcon fontSize=\"large\" />\r\n          <GifIcon fontSize=\"large\" />\r\n          <EmojiEmoticonsIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Try\\Tell\\tell\\src\\serviceWorker.js",[],"C:\\Try\\Tell\\tell\\src\\ChatHeader.js",[],"C:\\Try\\Tell\\tell\\src\\Message.js",[],"C:\\Try\\Tell\\tell\\src\\features\\userSlice.js",[],"C:\\Try\\Tell\\tell\\src\\features\\appSlice.js",[],"C:\\Try\\Tell\\tell\\src\\Login.js",[],"C:\\Try\\Tell\\tell\\src\\app\\store.js",[],"C:\\Try\\Tell\\tell\\src\\firebase.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":53,"column":33,"nodeType":"70","messageId":"71","endLine":53,"endColumn":35},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]